/**
 * Example of in depth merging of two dictionaries into one.
 *
 * Part of Promit Test Suit, location /test/Dictionary/Examples/Merge.promit
 *
 * Created by SD Asif Hossein in 29th June, 2022 (Tuesday) at 01:55 AM (UTC +06).
 */

// Out first dictionary.

take dict1 = {
	'name' : 'SD Asif Hossein',
	'props' : {
		'a' : [1, 2, 3]
	}
};

// Second dictionary.

take dict2 = {
	'age' : 19,
	'props' : {
		'b' : [4, 5, 6]
	}
};

// The merge function.

const fn merge(d1, d2) {
	# First create a d1 clone.

	take result = {};

	d1.keys().foreach(fn _(elem) {
		result[elem] = d1[elem];
	});

	# Now merge d2 to result.

	d2.keys().foreach(fn _(elem) {
		// If both element with the same key in 'result' and 'd2'
		// are dictionaries, ready to deep merge by calling merge(d1, d2)
		// recursively.

		if(result.has_key(elem) &&
		   typeof result[elem] == 'dictionary' &&
		   typeof d2[elem] == 'dictionary') 
			result[elem] = merge(result[elem], d2[elem]);

		// Else just add/replace the element in 'result' with 'd2's.

		else result[elem] = d2[elem];
	});

	return result;
}

show "'dict1' before merging : ";
showl dict1;

show "'dict2' before merging : ";
showl dict2;

show "After merge : ";
showl merge(dict1, dict2);
